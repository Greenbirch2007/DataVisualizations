https://blog.csdn.net/zhe13/article/details/46120487





妖哲开始搞前端5——再次归来REST API
2015年05月28日 12:06:05 zhe13 阅读数：956
上个月到现在似乎消失了好一段时间，难道火狐插件让我大脑当机了！

并不是=A=
只是我去玩了一些奇奇怪怪的东西，今天就给大家拿出来讲一讲一个聊天窗口。代码已经上传到GitHub，有兴趣的可以fork 我。 
我做的这个东西= =世面上已经很常见了，叫做留言板。和之前讲得火狐插件的的确确暂时性没有多大的关系（….）和Bootstrap勉勉强强地打上了一点点关系.l…（hhh。。。 
好吧，其实这只是一个半成品，但还是先整理一下思路方便之后的查询。

知识储备
今天要说的多半和这些东西脱离不了干系。 
当然我懒得赘述直接上干货， 
REST 入门介绍 
Parse.com一个有名的BaaS1服务商 
BootStrap基础 
jQuery&Ajax

以上罗列的均为参考手册，并不需要全部看完，只需在接下来编写代码的过程中用作参考。

当然你需要点开上方的Parse.com注册一个免费账户并且创建一个应用，保存你的APP ID，REST API Key以及Javascript Key。

创建一个简单的应用
我们先创建一下简单的目录结构，这里包含了html，和所需的js，css

/REST_Chat
    -index.html
    /js
        -app_0.js
    /css
没有忘记吧，这就是一个基础的html框架。然后我们需要引入javascript，之前有说过，可以引入本地的js也可以直接引用CDN镜像，在这篇教程中，我们将引入BootCDN上的免费jQuery库,和Parse的库 


html就先丢在这里不用管了，接下来我们来和app_0.js做一些羞羞的事情。 
使用$(document).ready来确保DOM已经加载完成

运行一下页面 
我们可以看到浏览器的控制台出现了这样的信息 


是的，我们的save请求POST过去了json文件，并且拿到了服务器的响应。 
然后在你的Parse面板中查看一下

就引开出现了一个名为Test的集合，并且存放有你刚刚发送过去的请求。

把它复杂化
好的伙计们，你们已经见识到了Parse的威力了，现在我们就要将这个基础的结果改成一个聊天系统。 
想要有个聊天系统，就不得不先做好一些界面。 
来考虑一下一个聊天界面应该包含一些什么东西

1.消息列表
２．一个输入框
３．一个发送按钮

1.消息列表 
2.一个输入框 
3.一个发送按钮 
好的，那我们打开HTML，来改写他。 
还记得之前说过的Bootstrap吗，这边就要用这个工具来美化页面。所以要引入js和css

注意，jquery必须在bootstrap之前运入，不然无法工作

来一个构建架构body元素，首先要搞一个消息列表
可以看到，有一个蓝灰色调的消息队列，这个列表包括了三个量，用户名，内容，
以及这个消息在parse集合中存储的id
在注释处创建输入框和提交按钮

这两个input输入框的name属性分别标记为name和msg然后使用placeholder默认
填充．按钮的id标记为send，这样方面我们之后使用选择器来找到他们

让js来实现整个chat应用的功能，应该包括这几个功能

1.发送输入的消息
２．获取消息列表
3.当然需要一个函数将消息列表编程规范的的table显示

进入应用之后？：输入消息并提交，　获取消息　　绘制消息
１．每次进入应用，提交信息完毕之后都应该调用获取消息函数
２．调用完获取消息函数之后就应该调用渲染函数将数据展示处理

 消息函数　　渲染函数

１．首先调用了一个未声明的函数getMessage()
2.然后通过选择器获取id为send按钮的点击事件，获取输入内容的value
3.调用.ajax方法，将两个value封装到json数据包中post到一个叫MessageBoard
的集合中去，这个ajax方法中还有很多参数但这不是我们要考虑的，
最重要的就是json以及请求类型"POST"
４．ajax的回调方法，成功则刷新(重新调用getMessage()获取
列表消息) 失败则弹出失败消息



接下来构建getMessage函数和绘制消息的函数updateView


使用同样的ajax方法获取远程rest api的消息列表

如果请求成功(返回２００ｏｋ的消息)调用updateView
显示得到的消息
使用选择器选中元素并且创建一个引用
清空这个元素的inner HTML
使用jquery.each遍历消息
追加表格
可以看见获取消息列表和发送消息都是使用ajax，结构几乎大同小异，只是没有了data信息并且请求的type变成了‘GET’ 
而update函数就是将返回的消息遍历一遍并且以table的形式输出 
好了，现在好像万事俱备了。保存一下我们的js和html。（不要忘记在html中将调用的js更改为app_01.js) 
然后用浏览器打开，运行一下 
